// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartEducation.DataAccess.DBContext;

#nullable disable

namespace SmartEducation.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804172304_initial-Migration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Auth.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeInfoId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInfoId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CityCorporationCounsilId")
                        .HasColumnType("int");

                    b.Property<int?>("CityCorporationId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationMappingId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipalityCounsilId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<int?>("PostOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Sector")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ThanaId")
                        .HasColumnType("int");

                    b.Property<int?>("UnionId")
                        .HasColumnType("int");

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.Property<string>("block")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("house_Village")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("streetNo")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CityCorporationCounsilId");

                    b.HasIndex("CityCorporationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeInfoId");

                    b.HasIndex("LocationMappingId");

                    b.HasIndex("MunicipalityCounsilId");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("PostOfficeId");

                    b.HasIndex("ThanaId");

                    b.HasIndex("UnionId");

                    b.HasIndex("WordId");

                    b.ToTable("EmployeeAddress");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("employeeCategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCategory");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("EmployeeInfoId");

                    b.ToTable("EmployeeEducation");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BankBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("BloodGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("GradeScaleId")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("LastAchievedEducationId")
                        .HasColumnType("int");

                    b.Property<int?>("MobileBankId")
                        .HasColumnType("int");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int>("SalaryTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("bankAccountNumber")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("basicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("confirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("contact")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("employeeCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("employeeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("fatherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fatherOccupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("grossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("height")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("joiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mobileBankAccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("motherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("motherOccupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("pictureName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("tentativeConfirmationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankBranchId");

                    b.HasIndex("BloodGroupId");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EducationId");

                    b.HasIndex("EmployeeCategoryId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("GradeScaleId");

                    b.HasIndex("InstitutionalDivisionId");

                    b.HasIndex("MobileBankId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("SalaryTypeId");

                    b.HasIndex("SectionId");

                    b.HasIndex("ShiftId");

                    b.ToTable("EmployeeInfo");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("employeeTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamHeadId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("examName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("marks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamHeadId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.ExamHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("examHeadName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ExamHead");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.ExamMarks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("examDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("obtainMarks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentInfoId");

                    b.ToTable("ExamMarks");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.ExamRoutine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicClassId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("examDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fromHour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("toHour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccademicClassId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ExamRoutine");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("examTypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ExamType");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Guardian.Guardian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("contactNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fatherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("firstName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("guardianCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("middleName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("motherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("occupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("permanentAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("presentAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("yearlyIncome")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Guardian");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.AccademicClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("className")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AccademicClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            className = "One"
                        },
                        new
                        {
                            Id = 2,
                            className = "Two"
                        },
                        new
                        {
                            Id = 3,
                            className = "Three"
                        },
                        new
                        {
                            Id = 4,
                            className = "Four"
                        },
                        new
                        {
                            Id = 5,
                            className = "Five"
                        },
                        new
                        {
                            Id = 6,
                            className = "Six"
                        },
                        new
                        {
                            Id = 7,
                            className = "Seven"
                        },
                        new
                        {
                            Id = 8,
                            className = "Eight"
                        },
                        new
                        {
                            Id = 9,
                            className = "Nine"
                        },
                        new
                        {
                            Id = 10,
                            className = "Ten"
                        },
                        new
                        {
                            Id = 11,
                            className = "Eleven"
                        },
                        new
                        {
                            Id = 12,
                            className = "Twelve"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.AccademicSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicClassId")
                        .HasColumnType("int");

                    b.Property<string>("accademicSectionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccademicClassId");

                    b.ToTable("AccademicSection");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.AccademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("aliasName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("fromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("lockMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("toDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("yearCaption")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("yearStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccademicYear");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("typeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AddressType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            typeName = "Present"
                        },
                        new
                        {
                            Id = 2,
                            typeName = "Permanent"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BankTypeId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BankTypeId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BankBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("contact")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool>("isMainBranch")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("BankBranch");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BankType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("bankTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BankType");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BloodGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("bloodGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BloodGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            bloodGroupName = "A+"
                        },
                        new
                        {
                            Id = 2,
                            bloodGroupName = "A-"
                        },
                        new
                        {
                            Id = 3,
                            bloodGroupName = "B+"
                        },
                        new
                        {
                            Id = 4,
                            bloodGroupName = "B-"
                        },
                        new
                        {
                            Id = 5,
                            bloodGroupName = "O+"
                        },
                        new
                        {
                            Id = 6,
                            bloodGroupName = "O-"
                        },
                        new
                        {
                            Id = 7,
                            bloodGroupName = "AB+"
                        },
                        new
                        {
                            Id = 8,
                            bloodGroupName = "AB-"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchInchargeId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("branchName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contact")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isMainBranch")
                        .HasColumnType("bit");

                    b.Property<string>("reportSortingOrder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchInchargeId");

                    b.HasIndex("InstitutionalDivisionId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BranchIncharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contactNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fatherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("motherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionalDivisionId");

                    b.ToTable("BranchIncharge");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("buildingName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("buildingPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("buildingType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("InstitutionalDivisionId");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BuildingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int?>("floorNumber")
                        .HasColumnType("int");

                    b.Property<string>("roomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("BuildingRoom");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.CityCorporation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cityCorporationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CityCorporation");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.CityCorporationCounsil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CityCorporationId")
                        .HasColumnType("int");

                    b.Property<string>("counsilName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("counsilNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityCorporationId");

                    b.ToTable("CityCorporationCounsil");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.ClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingRoomId")
                        .HasColumnType("int");

                    b.Property<string>("remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AccademicSectionId");

                    b.HasIndex("BuildingRoomId");

                    b.ToTable("ClassRoom");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("mobileDialingCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Designation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("designationName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("districtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("divisionName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EducationLevelId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("educationName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevelId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("educationLevelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EducationLevel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            code = "P101",
                            educationLevelName = "Primary"
                        },
                        new
                        {
                            Id = 2,
                            code = "S201",
                            educationLevelName = "Secondary"
                        },
                        new
                        {
                            Id = 3,
                            code = "HS301",
                            educationLevelName = "Higher Secondary"
                        },
                        new
                        {
                            Id = 4,
                            code = "UG401",
                            educationLevelName = "Under-graduate"
                        },
                        new
                        {
                            Id = 5,
                            code = "PG501",
                            educationLevelName = "Post-graduate"
                        },
                        new
                        {
                            Id = 6,
                            code = "D101",
                            educationLevelName = "Dimploma"
                        },
                        new
                        {
                            Id = 7,
                            code = "PGD201",
                            educationLevelName = "Post-Graduate Dimploma"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.EmailConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("bccEmail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ccEmail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("fromMail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("fromName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("hostName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("isServerUseSsl")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("serverPort")
                        .HasColumnType("int");

                    b.Property<string>("smtpServer")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("userName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("EmailConfiguration");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("genderName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("shortName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            genderName = "Male",
                            shortName = "M"
                        },
                        new
                        {
                            Id = 2,
                            genderName = "Female",
                            shortName = "Fe"
                        },
                        new
                        {
                            Id = 3,
                            genderName = "Third-Gender",
                            shortName = "TG"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.GeneralConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("configLabel")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("configName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("configOptions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("configValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("purpose")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionalDivisionId");

                    b.ToTable("GeneralConfiguration");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.GradeScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("gradeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("maximumSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("minimumSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("probitionSalary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("GradeScale");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccademicYearId")
                        .HasColumnType("int");

                    b.Property<int?>("HolydayTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("holidayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("toDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccademicYearId");

                    b.HasIndex("HolydayTypeId");

                    b.HasIndex("InstitutionalDivisionId");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.HolydayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HolydayType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "Govt"
                        },
                        new
                        {
                            Id = 2,
                            name = "Eid"
                        },
                        new
                        {
                            Id = 3,
                            name = "Puza"
                        },
                        new
                        {
                            Id = 4,
                            name = "Weekly"
                        },
                        new
                        {
                            Id = 5,
                            name = "Others"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("alternetContactNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("alternetEmail")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("baseUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contactNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("contactPerson")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("displayName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("eiinNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("establishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("founderNames")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isMotherInstitution")
                        .HasColumnType("bit");

                    b.Property<string>("logoName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("presentOwnerNames")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("reportSortingOrder")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("shortName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("websiteUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Institution");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("displayName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isMainDivision")
                        .HasColumnType("bit");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("languageName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            languageName = "English",
                            shortName = "ENG"
                        },
                        new
                        {
                            Id = 2,
                            languageName = "Bangla",
                            shortName = "BAN"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.LocationMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("mappingAreaName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("LocationMapping");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.MobileBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("bankName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("shortName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MobileBank");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            bankName = "Bikash",
                            shortName = "BK"
                        },
                        new
                        {
                            Id = 2,
                            bankName = "Nagad",
                            shortName = "ND"
                        },
                        new
                        {
                            Id = 3,
                            bankName = "Rocket",
                            shortName = "RKT"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ThanaId")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("municipalityName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ThanaId");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.MunicipalityCounsil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("counsilName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("counsilNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("MunicipalityCounsil");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Occupation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("occupationName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Occupation");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.PostOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ThanaId")
                        .HasColumnType("int");

                    b.Property<string>("postCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("postOfficeName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("ThanaId");

                    b.ToTable("PostOffice");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("relationName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Relation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            relationName = "Father"
                        },
                        new
                        {
                            Id = 2,
                            relationName = "Mother"
                        },
                        new
                        {
                            Id = 3,
                            relationName = "Brother"
                        },
                        new
                        {
                            Id = 4,
                            relationName = "Sister"
                        },
                        new
                        {
                            Id = 5,
                            relationName = "Uncle"
                        },
                        new
                        {
                            Id = 6,
                            relationName = "Aunty"
                        },
                        new
                        {
                            Id = 7,
                            relationName = "Grand-Father"
                        },
                        new
                        {
                            Id = 8,
                            relationName = "Grand-Mother"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("religionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Religion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            religionName = "Islam"
                        },
                        new
                        {
                            Id = 2,
                            religionName = "Hindu"
                        },
                        new
                        {
                            Id = 3,
                            religionName = "Christian"
                        },
                        new
                        {
                            Id = 4,
                            religionName = "Buddist"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.SalaryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("salaryTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SalaryType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            salaryTypeName = "Consolidated",
                            shortName = "C"
                        },
                        new
                        {
                            Id = 2,
                            salaryTypeName = "Regular",
                            shortName = "R"
                        });
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("sectionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<string>("beginTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("endTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("fromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("shiftName")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("shiftUser")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("shortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("toDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionalDivisionId");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("reportDisplayName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("subjectName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.SubjectDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicClassId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("marks")
                        .HasColumnType("int");

                    b.Property<int>("totalMarks")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccademicClassId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectDetails");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Thana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("thanaName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Thana");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Union", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ThanaId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("unionName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ThanaId");

                    b.ToTable("Union");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UnionId")
                        .HasColumnType("int");

                    b.Property<string>("wordName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("wordNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnionId");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CityCorporationCounsilId")
                        .HasColumnType("int");

                    b.Property<int?>("CityCorporationId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationMappingId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipalityCounsilId")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<int?>("PostOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Sector")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StudentInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("ThanaId")
                        .HasColumnType("int");

                    b.Property<int?>("UnionId")
                        .HasColumnType("int");

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.Property<string>("block")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("house_Village")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("streetNo")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CityCorporationCounsilId");

                    b.HasIndex("CityCorporationId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("LocationMappingId");

                    b.HasIndex("MunicipalityCounsilId");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("PostOfficeId");

                    b.HasIndex("StudentInfoId");

                    b.HasIndex("ThanaId");

                    b.HasIndex("UnionId");

                    b.HasIndex("WordId");

                    b.ToTable("StudentAddress");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentClassPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicYearId")
                        .HasColumnType("int");

                    b.Property<int?>("NewAccademicClassId")
                        .HasColumnType("int");

                    b.Property<int?>("NewAccademicSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("OldAccademicClassId")
                        .HasColumnType("int");

                    b.Property<int?>("OldAccademicSectionId")
                        .HasColumnType("int");

                    b.Property<string>("OldClassRoll")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("OldMeritPosition")
                        .HasColumnType("int");

                    b.Property<int?>("StudentInfoId")
                        .HasColumnType("int");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("effectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("newClassRoll")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("newMeritPosition")
                        .HasColumnType("int");

                    b.Property<string>("promotionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("toDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccademicYearId");

                    b.HasIndex("NewAccademicClassId");

                    b.HasIndex("NewAccademicSectionId");

                    b.HasIndex("OldAccademicClassId");

                    b.HasIndex("OldAccademicSectionId");

                    b.HasIndex("StudentInfoId");

                    b.ToTable("StudentClassPromotion");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicClassId")
                        .HasColumnType("int");

                    b.Property<int?>("AccademicSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("AccademicYearId")
                        .HasColumnType("int");

                    b.Property<int?>("BankBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("BloodGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ClassRoll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionalDivisionId")
                        .HasColumnType("int");

                    b.Property<int?>("MeritPosition")
                        .HasColumnType("int");

                    b.Property<int?>("MobileBankId")
                        .HasColumnType("int");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("bankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fatherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fatherOccupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("firstName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("height")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lgAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("lgAge")
                        .HasColumnType("int");

                    b.Property<string>("lgContact")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("lgEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lgName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lgOccupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("middleName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("mobileBankAccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("motherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("motherOccupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("pictureName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("registrationNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("weight")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccademicClassId");

                    b.HasIndex("AccademicSectionId");

                    b.HasIndex("AccademicYearId");

                    b.HasIndex("BankBranchId");

                    b.HasIndex("BloodGroupId");

                    b.HasIndex("GenderId");

                    b.HasIndex("InstitutionalDivisionId");

                    b.HasIndex("MobileBankId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("ShiftId");

                    b.ToTable("StudentInfo");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccademicClassId")
                        .HasColumnType("int");

                    b.Property<int?>("AccademicYearId")
                        .HasColumnType("int");

                    b.Property<int?>("BankBranchId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("bankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("deletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fatherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("firstName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("guardianName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lgAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("lgAge")
                        .HasColumnType("int");

                    b.Property<string>("lgContact")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("lgEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lgName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("lgOccupation")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("middleName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("motherName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("studentCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime?>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccademicClassId");

                    b.HasIndex("AccademicYearId");

                    b.HasIndex("BankBranchId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReligionId");

                    b.ToTable("StudentRegistration");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Auth.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Auth.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEducation.Domain.Model.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Auth.ApplicationUser", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Employee.EmployeeInfo", "EmployeeInfo")
                        .WithMany()
                        .HasForeignKey("EmployeeInfoId");

                    b.Navigation("EmployeeInfo");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeAddress", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AddressType", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.CityCorporationCounsil", "CityCorporationCounsil")
                        .WithMany()
                        .HasForeignKey("CityCorporationCounsilId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.CityCorporation", "CityCorporation")
                        .WithMany()
                        .HasForeignKey("CityCorporationId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("SmartEducation.Domain.Model.Employee.EmployeeInfo", "EmployeeInfo")
                        .WithMany()
                        .HasForeignKey("EmployeeInfoId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.LocationMapping", "LocationMapping")
                        .WithMany()
                        .HasForeignKey("LocationMappingId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.MunicipalityCounsil", "MunicipalityCounsil")
                        .WithMany()
                        .HasForeignKey("MunicipalityCounsilId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.PostOffice", "PostOffice")
                        .WithMany()
                        .HasForeignKey("PostOfficeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Thana", "Thana")
                        .WithMany()
                        .HasForeignKey("ThanaId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Union", "Union")
                        .WithMany()
                        .HasForeignKey("UnionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordId");

                    b.Navigation("AddressType");

                    b.Navigation("CityCorporation");

                    b.Navigation("CityCorporationCounsil");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Division");

                    b.Navigation("EmployeeInfo");

                    b.Navigation("LocationMapping");

                    b.Navigation("Municipality");

                    b.Navigation("MunicipalityCounsil");

                    b.Navigation("PostOffice");

                    b.Navigation("Thana");

                    b.Navigation("Union");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeEducation", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("SmartEducation.Domain.Model.Employee.EmployeeInfo", "EmployeeInfo")
                        .WithMany()
                        .HasForeignKey("EmployeeInfoId");

                    b.Navigation("Education");

                    b.Navigation("EmployeeInfo");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Employee.EmployeeInfo", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BankBranch", "BankBranch")
                        .WithMany()
                        .HasForeignKey("BankBranchId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BloodGroup", "BloodGrop")
                        .WithMany()
                        .HasForeignKey("BloodGroupId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("SmartEducation.Domain.Model.Employee.EmployeeCategory", "EmployeeCategory")
                        .WithMany()
                        .HasForeignKey("EmployeeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEducation.Domain.Model.Employee.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.GradeScale", "GradeScale")
                        .WithMany()
                        .HasForeignKey("GradeScaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.MobileBank", "MobileBank")
                        .WithMany()
                        .HasForeignKey("MobileBankId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.SalaryType", "SalaryType")
                        .WithMany()
                        .HasForeignKey("SalaryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.Navigation("BankBranch");

                    b.Navigation("BloodGrop");

                    b.Navigation("Branch");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Education");

                    b.Navigation("EmployeeCategory");

                    b.Navigation("EmployeeType");

                    b.Navigation("Gender");

                    b.Navigation("GradeScale");

                    b.Navigation("InstitutionalDivision");

                    b.Navigation("MobileBank");

                    b.Navigation("Religion");

                    b.Navigation("SalaryType");

                    b.Navigation("Section");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.Exam", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Exam.ExamHead", "ExamHead")
                        .WithMany()
                        .HasForeignKey("ExamHeadId");

                    b.HasOne("SmartEducation.Domain.Model.Exam.ExamType", "ExamType")
                        .WithMany()
                        .HasForeignKey("ExamTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("ExamHead");

                    b.Navigation("ExamType");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.ExamMarks", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.Exam.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId");

                    b.HasOne("SmartEducation.Domain.Model.Student.StudentInfo", "StudentInfo")
                        .WithMany()
                        .HasForeignKey("StudentInfoId");

                    b.Navigation("Exam");

                    b.Navigation("StudentInfo");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Exam.ExamRoutine", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "AccademicClass")
                        .WithMany()
                        .HasForeignKey("AccademicClassId");

                    b.HasOne("SmartEducation.Domain.Model.Exam.ExamType", "ExamType")
                        .WithMany()
                        .HasForeignKey("ExamTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("AccademicClass");

                    b.Navigation("ExamType");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.AccademicSection", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "AccademicClass")
                        .WithMany()
                        .HasForeignKey("AccademicClassId");

                    b.Navigation("AccademicClass");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Bank", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BankType", "BankType")
                        .WithMany()
                        .HasForeignKey("BankTypeId");

                    b.Navigation("BankType");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BankBranch", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Branch", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BranchIncharge", "BranchIncharge")
                        .WithMany()
                        .HasForeignKey("BranchInchargeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BranchIncharge");

                    b.Navigation("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BranchIncharge", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.Navigation("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Building", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.Navigation("Branch");

                    b.Navigation("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.BuildingRoom", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.CityCorporationCounsil", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.CityCorporation", "CityCorporation")
                        .WithMany()
                        .HasForeignKey("CityCorporationId");

                    b.Navigation("CityCorporation");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.ClassRoom", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicSection", "AccademicSection")
                        .WithMany()
                        .HasForeignKey("AccademicSectionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BuildingRoom", "BuildingRoom")
                        .WithMany()
                        .HasForeignKey("BuildingRoomId");

                    b.Navigation("AccademicSection");

                    b.Navigation("BuildingRoom");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Department", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Designation", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.District", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Division", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Education", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.EducationLevel", "EducationLevel")
                        .WithMany()
                        .HasForeignKey("EducationLevelId");

                    b.Navigation("EducationLevel");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.GeneralConfiguration", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.Navigation("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Holiday", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicYear", "AccademicYear")
                        .WithMany()
                        .HasForeignKey("AccademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.HolydayType", "HolydayType")
                        .WithMany()
                        .HasForeignKey("HolydayTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.Navigation("AccademicYear");

                    b.Navigation("HolydayType");

                    b.Navigation("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Municipality", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Thana", "Thana")
                        .WithMany()
                        .HasForeignKey("ThanaId");

                    b.Navigation("Thana");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.MunicipalityCounsil", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.PostOffice", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Thana", "Thana")
                        .WithMany()
                        .HasForeignKey("ThanaId");

                    b.Navigation("Thana");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Section", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Shift", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.Navigation("InstitutionalDivision");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.SubjectDetails", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "AccademicClass")
                        .WithMany()
                        .HasForeignKey("AccademicClassId");

                    b.HasOne("SmartEducation.Domain.Model.Exam.ExamType", "ExamType")
                        .WithMany()
                        .HasForeignKey("ExamTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.Navigation("AccademicClass");

                    b.Navigation("ExamType");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Thana", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.Navigation("District");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Union", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Thana", "Thana")
                        .WithMany()
                        .HasForeignKey("ThanaId");

                    b.Navigation("Thana");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.MasterPanel.Word", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Union", "Union")
                        .WithMany()
                        .HasForeignKey("UnionId");

                    b.Navigation("Union");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentAddress", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AddressType", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.CityCorporationCounsil", "CityCorporationCounsil")
                        .WithMany()
                        .HasForeignKey("CityCorporationCounsilId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.CityCorporation", "CityCorporation")
                        .WithMany()
                        .HasForeignKey("CityCorporationId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.LocationMapping", "LocationMapping")
                        .WithMany()
                        .HasForeignKey("LocationMappingId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.MunicipalityCounsil", "MunicipalityCounsil")
                        .WithMany()
                        .HasForeignKey("MunicipalityCounsilId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.PostOffice", "PostOffice")
                        .WithMany()
                        .HasForeignKey("PostOfficeId");

                    b.HasOne("SmartEducation.Domain.Model.Student.StudentInfo", "StudentInfo")
                        .WithMany()
                        .HasForeignKey("StudentInfoId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Thana", "Thana")
                        .WithMany()
                        .HasForeignKey("ThanaId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Union", "Union")
                        .WithMany()
                        .HasForeignKey("UnionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordId");

                    b.Navigation("AddressType");

                    b.Navigation("CityCorporation");

                    b.Navigation("CityCorporationCounsil");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Division");

                    b.Navigation("LocationMapping");

                    b.Navigation("Municipality");

                    b.Navigation("MunicipalityCounsil");

                    b.Navigation("PostOffice");

                    b.Navigation("StudentInfo");

                    b.Navigation("Thana");

                    b.Navigation("Union");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentClassPromotion", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicYear", "AccademicYear")
                        .WithMany()
                        .HasForeignKey("AccademicYearId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "NewAccademicClass")
                        .WithMany()
                        .HasForeignKey("NewAccademicClassId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicSection", "NewAccademicSection")
                        .WithMany()
                        .HasForeignKey("NewAccademicSectionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "OldAccademicClass")
                        .WithMany()
                        .HasForeignKey("OldAccademicClassId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicSection", "OldAccademicSection")
                        .WithMany()
                        .HasForeignKey("OldAccademicSectionId");

                    b.HasOne("SmartEducation.Domain.Model.Student.StudentInfo", "StudentInfo")
                        .WithMany()
                        .HasForeignKey("StudentInfoId");

                    b.Navigation("AccademicYear");

                    b.Navigation("NewAccademicClass");

                    b.Navigation("NewAccademicSection");

                    b.Navigation("OldAccademicClass");

                    b.Navigation("OldAccademicSection");

                    b.Navigation("StudentInfo");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentInfo", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "AccademicClass")
                        .WithMany()
                        .HasForeignKey("AccademicClassId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicSection", "AccademicSection")
                        .WithMany()
                        .HasForeignKey("AccademicSectionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicYear", "AccademicYear")
                        .WithMany()
                        .HasForeignKey("AccademicYearId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BankBranch", "BankBranch")
                        .WithMany()
                        .HasForeignKey("BankBranchId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BloodGroup", "BloodGrop")
                        .WithMany()
                        .HasForeignKey("BloodGroupId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.InstitutionalDivision", "InstitutionalDivision")
                        .WithMany()
                        .HasForeignKey("InstitutionalDivisionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.MobileBank", "MobileBank")
                        .WithMany()
                        .HasForeignKey("MobileBankId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.Navigation("AccademicClass");

                    b.Navigation("AccademicSection");

                    b.Navigation("AccademicYear");

                    b.Navigation("BankBranch");

                    b.Navigation("BloodGrop");

                    b.Navigation("Gender");

                    b.Navigation("InstitutionalDivision");

                    b.Navigation("MobileBank");

                    b.Navigation("Religion");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("SmartEducation.Domain.Model.Student.StudentRegistration", b =>
                {
                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicClass", "AccademicClass")
                        .WithMany()
                        .HasForeignKey("AccademicClassId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.AccademicYear", "AccademicYear")
                        .WithMany()
                        .HasForeignKey("AccademicYearId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.BankBranch", "BankBranch")
                        .WithMany()
                        .HasForeignKey("BankBranchId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("SmartEducation.Domain.Model.MasterPanel.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.Navigation("AccademicClass");

                    b.Navigation("AccademicYear");

                    b.Navigation("BankBranch");

                    b.Navigation("Gender");

                    b.Navigation("Religion");
                });
#pragma warning restore 612, 618
        }
    }
}
